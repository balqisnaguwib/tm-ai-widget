"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./utils/messageUtils.js":
/*!*******************************!*\
  !*** ./utils/messageUtils.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   containsImageUrl: () => (/* binding */ containsImageUrl),\n/* harmony export */   extractImageUrl: () => (/* binding */ extractImageUrl),\n/* harmony export */   extractMessageFromResponse: () => (/* binding */ extractMessageFromResponse),\n/* harmony export */   formatMessage: () => (/* binding */ formatMessage),\n/* harmony export */   hasValidMessage: () => (/* binding */ hasValidMessage),\n/* harmony export */   parseOptions: () => (/* binding */ parseOptions)\n/* harmony export */ });\n// utils/messageUtils.js\n/**\n * Utility functions for message handling and formatting\n */ /**\n * Formats message data to ensure it's in a consistent string format\n * @param {any} messageData - The message data to format (could be string, object, null, etc.)\n * @returns {string} - The formatted message string\n */ const formatMessage = (messageData)=>{\n    // Handle undefined/null case\n    if (messageData === undefined || messageData === null) {\n        return '';\n    }\n    // Handle string case\n    if (typeof messageData === 'string') {\n        return messageData;\n    }\n    // Handle object case\n    if (typeof messageData === 'object') {\n        // Try to extract text from common object structures\n        if (messageData.text) {\n            return messageData.text;\n        } else if (messageData.content) {\n            return messageData.content;\n        } else if (messageData.message) {\n            return messageData.message;\n        } else {\n            try {\n                return JSON.stringify(messageData, null, 2);\n            } catch (error) {\n                console.error('Error stringifying message object:', error);\n                return '[Complex object]';\n            }\n        }\n    }\n    // Handle other types (number, boolean, etc.)\n    return String(messageData);\n};\n/**\n * Parse multiple choice options from a message text\n * @param {string} messageText - The message text to parse\n * @returns {string[]} - Array of option strings\n */ const parseOptions = (messageText)=>{\n    const formattedText = formatMessage(messageText);\n    const options = [];\n    if (!formattedText) {\n        return options;\n    }\n    const lines = formattedText.split('\\n');\n    // Extract options (A., B., C., D. format)\n    for (const line of lines){\n        if (line.match(/^[A-D]\\.\\s/)) {\n            options.push(line.trim());\n        }\n    }\n    return options;\n};\n/**\n * Checks if a response contains a valid message\n * @param {object} response - The API response object\n * @returns {boolean} - Whether the response has a valid message\n */ const hasValidMessage = (response)=>{\n    return response && (response.message !== undefined || typeof response === 'string' || typeof response === 'object' && !response.competency_status);\n};\n/**\n * Extracts the message content from a response\n * @param {object} response - The API response object\n * @returns {string} - The extracted message content\n */ const extractMessageFromResponse = (response)=>{\n    if (!response) {\n        return '';\n    }\n    if (response.message !== undefined) {\n        return response.message;\n    } else if (typeof response === 'string') {\n        return response;\n    } else if (typeof response === 'object' && !response.competency_status) {\n        return response;\n    }\n    return '';\n};\n/**\n * Checks if a text contains an image URL\n * @param {string} text - Text to check for image URLs\n * @returns {boolean} - Whether the text contains an image URL\n */ const containsImageUrl = (text)=>{\n    if (!text || typeof text !== 'string') return false;\n    // Check for common image extensions\n    const imageExtensionRegex = /https?:\\/\\/\\S+\\.(jpg|jpeg|png|gif|bmp|webp|svg)(\\?.*)?(\\s|$)/i;\n    // Check for Google Drive image links specifically - note the updated pattern\n    const driveImageRegex = /https?:\\/\\/drive\\.(?:google\\.)?usercontent\\.google\\.com\\/(?:download|view)\\S*/i;\n    // Check for content IDs in Google Drive links\n    const driveContentRegex = /id=[\\w-]+/i;\n    return imageExtensionRegex.test(text) || driveImageRegex.test(text) && driveContentRegex.test(text);\n};\n/**\n * Extracts image URL from text\n * @param {string} text - Text containing an image URL\n * @returns {string|null} - The extracted image URL or null if not found\n */ const extractImageUrl = (text)=>{\n    if (!text || typeof text !== 'string') return null;\n    // Try to match standard image URLs first\n    const imageMatch = text.match(/https?:\\/\\/\\S+\\.(jpg|jpeg|png|gif|bmp|webp|svg)(\\?[^\"'\\s]*)?/i);\n    if (imageMatch) return imageMatch[0];\n    // Try to match Google Drive image URLs\n    const driveMatch = text.match(/https?:\\/\\/drive\\.(?:google\\.)?usercontent\\.google\\.com\\/\\S+?(?=[\\s\"']|$)/i);\n    if (driveMatch) return driveMatch[0];\n    return null;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/messageUtils.js\n"));

/***/ })

});